name: "n8n Workflows Backup"

on:
  schedule:
    - cron: "0 21 * * *" # Runs daily at 00:00 Turkey time (UTC+3)
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      # 1. Checks out your repository so the workflow can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Create directories to store backups
      - name: Create workflows directory
        run: mkdir -p ./workflows

      # 3. Download all workflows from n8n REST API using JWT token authentication
      - name: Download n8n workflows
        env:
          N8N_JWT_TOKEN: ${{ secrets.N8N_JWT_TOKEN }}
          N8N_URL: ${{ secrets.N8N_URL }}
          N8N_BASIC_USER: ${{ secrets.N8N_BASIC_USER }}
          N8N_BASIC_PASS: ${{ secrets.N8N_BASIC_PASS }}
        run: |
          # Check for required credentials
          if [ -z "$N8N_JWT_TOKEN" ]; then
            echo "::error::The N8N_JWT_TOKEN secret is missing."
            exit 1
          fi

          # Normalize N8N_URL (remove trailing slash if present)
          N8N_URL="${N8N_URL%/}"

          # If Basic Auth is provided, add it
          BASIC_ARGS=()
          if [ -n "$N8N_BASIC_USER" ] && [ -n "$N8N_BASIC_PASS" ]; then
            BASIC_ARGS=( -u "$N8N_BASIC_USER:$N8N_BASIC_PASS" )
            echo "Using Basic Auth."
          fi

          LIST_URL="$N8N_URL/api/v1/workflows"
          AUTH_HEADER="Authorization: Bearer $N8N_JWT_TOKEN"

          echo "Fetching workflows from: $LIST_URL"

          # Use curl to get both the HTTP status code and the response body
          HTTP_BODY=$(curl -s --request GET \
            --url "$LIST_URL" \
            --header "$AUTH_HEADER" \
            --header 'Content-Type: application/json' \
            --write-out "%{http_code}" \
            "${BASIC_ARGS[@]}")

          # Extract the status code (last 3 characters) and body
          HTTP_STATUS="${HTTP_BODY: -3}"
          HTTP_BODY="${HTTP_BODY%???}"

          # Check if the HTTP status code is a success code (2xx)
          if [[ "$HTTP_STATUS" -lt 200 || "$HTTP_STATUS" -ge 300 ]]; then
            echo "::error::Failed to fetch workflows. Server responded with HTTP status $HTTP_STATUS."
            echo "::error::Server Response Body: $HTTP_BODY"
            echo "Please check your N8N_URL and N8N_JWT_TOKEN secrets."
            exit 1
          fi

          echo "Successfully fetched workflow list (HTTP $HTTP_STATUS)."

          # Parse the list of workflows from the .data array
          echo "$HTTP_BODY" | jq -c '.data[] | {id: .id, name: .name}' > workflows.tmp

          while IFS= read -r line; do
            id=$(echo "$line" | jq -r '.id')
            name=$(echo "$line" | jq -r '.name' | sed 's/[/:<>:"\\|?*]/_/g') # Sanitize filename
            
            echo "Downloading workflow: $name (ID: $id)"
            ITEM_URL="$N8N_URL/api/v1/workflows/$id"

            workflow_response=$(curl -s --request GET \
              --url "$ITEM_URL" \
              --header "$AUTH_HEADER" \
              "${BASIC_ARGS[@]}")

            if echo "$workflow_response" | jq -e '.' > /dev/null 2>&1; then
              echo "$workflow_response" > "./workflows/${name} (${id}).json"
            else
              echo "Warning: Invalid JSON response for workflow $id. Skipping."
            fi
          done < workflows.tmp
          rm workflows.tmp

      # 4. Commit and push changes to the repository
      - name: Commit and push if there are changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Automated n8n workflow backup"
          file_pattern: "workflows/*.json"
          commit_user_name: "GitHub Actions"
          commit_user_email: "actions@github.com"
          commit_author: "GitHub Actions <actions@github.com>"

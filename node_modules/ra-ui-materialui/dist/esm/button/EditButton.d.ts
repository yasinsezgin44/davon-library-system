import * as React from 'react';
import type { ReactNode } from 'react';
import { type ComponentsOverrides } from '@mui/material/styles';
import { type RaRecord } from 'ra-core';
import { ButtonProps } from './Button';
/**
 * Opens the Edit view for the current record.
 *
 * Reads the record and resource from the context.
 *
 * @example // basic usage
 * import { EditButton } from 'react-admin';
 *
 * const CommentEditButton = () => (
 *     <EditButton label="Edit comment" />
 * );
 */
export declare const EditButton: <RecordType extends RaRecord<import("ra-core").Identifier> = any>(inProps: EditButtonProps<RecordType>) => React.JSX.Element | null;
interface Props<RecordType extends RaRecord = any> {
    icon?: ReactNode;
    label?: string;
    record?: RecordType;
    resource?: string;
    scrollToTop?: boolean;
}
export type EditButtonProps<RecordType extends RaRecord = any> = Props<RecordType> & ButtonProps;
export declare const EditButtonClasses: {
    root: string;
};
declare module '@mui/material/styles' {
    interface ComponentNameToClassKey {
        RaEditButton: 'root';
    }
    interface ComponentsPropsList {
        RaEditButton: Partial<EditButtonProps>;
    }
    interface Components {
        RaEditButton?: {
            defaultProps?: ComponentsPropsList['RaEditButton'];
            styleOverrides?: ComponentsOverrides<Omit<Theme, 'components'>>['RaEditButton'];
        };
    }
}
export {};
//# sourceMappingURL=EditButton.d.ts.map
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { NumberField } from '../../field/NumberField';
import { genericMemo } from '../../field/genericMemo';
import { DataTableColumn } from './DataTableColumn';
var DataTableNumberColumnImpl = React.forwardRef(function (_a, ref) {
    var source = _a.source, options = _a.options, locales = _a.locales, rest = __rest(_a, ["source", "options", "locales"]);
    return (React.createElement(DataTableColumn, __assign({ source: source }, rest, { align: "right", ref: ref }),
        React.createElement(NumberField, { source: source, options: options, locales: locales })));
});
export var DataTableNumberColumn = genericMemo(DataTableNumberColumnImpl);
//# sourceMappingURL=DataTableNumberColumn.js.map
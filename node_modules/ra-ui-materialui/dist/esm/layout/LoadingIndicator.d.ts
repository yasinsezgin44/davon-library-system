import * as React from 'react';
import { type ComponentsOverrides, type SxProps, type Theme } from '@mui/material/styles';
import { type RefreshIconButtonProps } from '../button';
export declare const LoadingIndicator: (inProps: LoadingIndicatorProps) => React.JSX.Element;
interface Props {
    className?: string;
    sx?: SxProps<Theme>;
}
type LoadingIndicatorProps = Props & Pick<RefreshIconButtonProps, 'onClick'>;
export declare const LoadingIndicatorClasses: {
    loader: string;
    loadedLoading: string;
    loadedIcon: string;
};
declare module '@mui/material/styles' {
    interface ComponentNameToClassKey {
        RaLoadingIndicator: 'root' | 'loader' | 'loadedLoading' | 'loadedIcon';
    }
    interface ComponentsPropsList {
        RaLoadingIndicator: Partial<LoadingIndicatorProps>;
    }
    interface Components {
        RaLoadingIndicator?: {
            defaultProps?: ComponentsPropsList['RaLoadingIndicator'];
            styleOverrides?: ComponentsOverrides<Omit<Theme, 'components'>>['RaLoadingIndicator'];
        };
    }
}
export {};
//# sourceMappingURL=LoadingIndicator.d.ts.map
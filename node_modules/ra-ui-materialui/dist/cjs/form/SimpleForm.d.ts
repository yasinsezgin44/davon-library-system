import * as React from 'react';
import type { ReactElement, ReactNode } from 'react';
import { type FormProps } from 'ra-core';
import { type SxProps, type StackProps } from '@mui/material';
import { type ComponentsOverrides, type Theme } from '@mui/material/styles';
/**
 * Form with a one column layout, one input per line.
 *
 * Pass input components as children.
 *
 * @example
 *
 * import * as React from "react";
 * import { Create, Edit, SimpleForm, TextInput, DateInput, ReferenceManyField, Datagrid, TextField, DateField, EditButton } from 'react-admin';
 * import RichTextInput from 'ra-input-rich-text';
 *
 * export const PostCreate = () => (
 *     <Create>
 *         <SimpleForm>
 *             <TextInput source="title" />
 *             <TextInput source="teaser" options={{ multiline: true }} />
 *             <RichTextInput source="body" />
 *             <DateInput label="Publication date" source="published_at" defaultValue={new Date()} />
 *         </SimpleForm>
 *     </Create>
 * );
 *
 * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)
 * @prop {ReactElement[]} children Input elements
 * @prop {Object} defaultValues
 * @prop {Function} validate
 * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton
 *
 * @param {Props} props
 */
export declare const SimpleForm: (inProps: SimpleFormProps) => React.JSX.Element;
export interface SimpleFormProps extends Omit<FormProps, 'render'>, Omit<StackProps, 'onSubmit'> {
    children: ReactNode;
    className?: string;
    component?: React.ComponentType<any>;
    defaultValues?: any;
    toolbar?: ReactElement | false;
    sx?: SxProps<Theme>;
}
declare module '@mui/material/styles' {
    interface ComponentNameToClassKey {
        RaSimpleForm: 'root';
    }
    interface ComponentsPropsList {
        RaSimpleForm: Partial<SimpleFormProps>;
    }
    interface Components {
        RaSimpleForm?: {
            defaultProps?: ComponentsPropsList['RaSimpleForm'];
            styleOverrides?: ComponentsOverrides<Omit<Theme, 'components'>>['RaSimpleForm'];
        };
    }
}
//# sourceMappingURL=SimpleForm.d.ts.map
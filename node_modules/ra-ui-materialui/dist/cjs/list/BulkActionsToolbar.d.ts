import * as React from 'react';
import { type ReactElement, type ReactNode } from 'react';
import { type ComponentsOverrides } from '@mui/material/styles';
export declare const BulkActionsToolbar: (inProps: BulkActionsToolbarProps) => React.JSX.Element;
export interface BulkActionsToolbarProps {
    children?: ReactNode;
    label?: string;
    className?: string;
    selectAllButton?: ReactElement | false;
}
export declare const BulkActionsToolbarClasses: {
    toolbar: string;
    topToolbar: string;
    buttons: string;
    collapsed: string;
    title: string;
    icon: string;
};
declare module '@mui/material/styles' {
    interface PaletteOptions {
        bulkActionsToolbarColor?: string;
        bulkActionsToolbarBackgroundColor?: string;
    }
    interface Palette {
        bulkActionsToolbarColor: string;
        bulkActionsToolbarBackgroundColor: string;
    }
    interface ComponentNameToClassKey {
        RaBulkActionsToolbar: 'root' | 'toolbar' | 'topToolbar' | 'buttons' | 'collapsed' | 'title' | 'icon';
    }
    interface ComponentsPropsList {
        RaBulkActionsToolbar: Partial<BulkActionsToolbarProps>;
    }
    interface Components {
        RaBulkActionsToolbar?: {
            defaultProps?: ComponentsPropsList['RaBulkActionsToolbar'];
            styleOverrides?: ComponentsOverrides<Omit<Theme, 'components'>>['RaBulkActionsToolbar'];
        };
    }
}
//# sourceMappingURL=BulkActionsToolbar.d.ts.map
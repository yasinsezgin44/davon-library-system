"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextArrayInput = void 0;
var React = __importStar(require("react"));
var clsx_1 = __importDefault(require("clsx"));
var material_1 = require("@mui/material");
var styles_1 = require("@mui/material/styles");
var ra_core_1 = require("ra-core");
var InputHelperText_1 = require("./InputHelperText");
var TextArrayInput = function (inProps) {
    var props = (0, styles_1.useThemeProps)({
        props: inProps,
        name: PREFIX,
    });
    var className = props.className, disabled = props.disabled, format = props.format, helperText = props.helperText, label = props.label, margin = props.margin, parse = props.parse, readOnly = props.readOnly, size = props.size, source = props.source, sx = props.sx, validate = props.validate, variant = props.variant, rest = __rest(props, ["className", "disabled", "format", "helperText", "label", "margin", "parse", "readOnly", "size", "source", "sx", "validate", "variant"]);
    var _a = (0, ra_core_1.useInput)(__assign({ disabled: disabled, format: format, parse: parse, readOnly: readOnly, source: source, validate: validate }, rest)), field = _a.field, _b = _a.fieldState, error = _b.error, invalid = _b.invalid, id = _a.id, isRequired = _a.isRequired;
    var renderHelperText = helperText !== false || invalid;
    return (React.createElement(StyledAutocomplete, __assign({ multiple: true, freeSolo: true, autoSelect: true, options: [], id: id, className: (0, clsx_1.default)('ra-input', "ra-input-".concat(source), className), renderTags: function (value, getTagProps) {
            return value.map(function (option, index) {
                var _a = getTagProps({ index: index }), key = _a.key, tagProps = __rest(_a, ["key"]);
                return (React.createElement(material_1.Chip, __assign({ size: "small", label: option, key: key }, tagProps)));
            });
        }, renderInput: function (params) { return (React.createElement(material_1.TextField, __assign({}, params, { label: label !== '' && label !== false ? (React.createElement(ra_core_1.FieldTitle, { label: label, source: source, resource: props.resource, isRequired: isRequired })) : null, helperText: renderHelperText ? (React.createElement(InputHelperText_1.InputHelperText, { error: error === null || error === void 0 ? void 0 : error.message, helperText: helperText })) : null, error: invalid, variant: variant, margin: margin, size: size }))); }, sx: sx }, field, { value: field.value || emptyArray, onChange: function (e, newValue) { return field.onChange(newValue); } }, rest, { disabled: disabled || readOnly })));
};
exports.TextArrayInput = TextArrayInput;
var emptyArray = [];
var PREFIX = 'RaTextArrayInput';
var StyledAutocomplete = (0, styles_1.styled)((material_1.Autocomplete), {
    name: PREFIX,
    overridesResolver: function (props, styles) { return styles.root; },
})(function (_a) {
    var theme = _a.theme;
    return ({
        minWidth: theme.spacing(20),
    });
});
//# sourceMappingURL=TextArrayInput.js.map
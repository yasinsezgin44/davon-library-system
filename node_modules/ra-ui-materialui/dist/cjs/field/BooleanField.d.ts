import * as React from 'react';
import { type ComponentsOverrides } from '@mui/material/styles';
import { type TypographyProps, SvgIcon } from '@mui/material';
import type { FieldProps } from './types';
export declare const BooleanField: {
    <RecordType extends Record<string, any> = Record<string, any>>(inProps: BooleanFieldProps<RecordType>): React.JSX.Element;
    displayName: string;
};
export interface BooleanFieldProps<RecordType extends Record<string, any> = Record<string, any>> extends FieldProps<RecordType>, Omit<TypographyProps, 'textAlign'> {
    valueLabelTrue?: string;
    valueLabelFalse?: string;
    TrueIcon?: typeof SvgIcon | null;
    FalseIcon?: typeof SvgIcon | null;
    looseValue?: boolean;
}
declare module '@mui/material/styles' {
    interface ComponentNameToClassKey {
        RaBooleanField: 'root' | 'trueIcon' | 'falseIcon';
    }
    interface ComponentsPropsList {
        RaBooleanField: Partial<BooleanFieldProps>;
    }
    interface Components {
        RaBooleanField?: {
            defaultProps?: ComponentsPropsList['RaBooleanField'];
            styleOverrides?: ComponentsOverrides<Omit<Theme, 'components'>>['RaBooleanField'];
        };
    }
}
//# sourceMappingURL=BooleanField.d.ts.map
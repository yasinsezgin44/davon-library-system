"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SelectAllButton = void 0;
var react_1 = __importStar(require("react"));
var ra_core_1 = require("ra-core");
var styles_1 = require("@mui/material/styles");
var Button_1 = require("./Button");
/**
 * Select all items in the current List context.
 *
 * Used in Datagrid's bulk action toolbar.
 *
 * @typedef {Object} Props the props you can use
 * @prop {string} label Button label. Defaults to 'ra.action.select_all_button', translated.
 * @prop {string} limit Maximum number of items to select. Defaults to 250.
 * @prop {function} queryOptions Object of options passed to react-query.
 *
 * @param {Props} props
 *
 * @example
 *
 * import { List, Datagrid, BulkActionsToolbar, SelectAllButton, BulkDeleteButton } from 'react-admin';
 *
 * const PostSelectAllButton = () => (
 *     <SelectAllButton
 *         label="Select all records"
 *         queryOptions={{ meta: { foo: 'bar' } }}
 *     />
 * );
 *
 * export const PostList = () => (
 *     <List>
 *         <Datagrid
 *             bulkActionsToolbar={
 *                 <BulkActionsToolbar selectAllButton={PostSelectAllButton}>
 *                     <BulkDeleteButton />
 *                 </BulkActionsToolbar>
 *             }
 *         >
 *             ...
 *         </Datagrid>
 *     </List>
 * );
 */
var SelectAllButton = function (inProps) {
    var props = (0, styles_1.useThemeProps)({
        props: inProps,
        name: PREFIX,
    });
    var _a = props.label, label = _a === void 0 ? 'ra.action.select_all_button' : _a, _b = props.limit, limit = _b === void 0 ? 250 : _b, onClick = props.onClick, queryOptions = props.queryOptions, rest = __rest(props, ["label", "limit", "onClick", "queryOptions"]);
    var _c = (0, ra_core_1.useListContext)(), total = _c.total, selectedIds = _c.selectedIds, onSelectAll = _c.onSelectAll, data = _c.data;
    var handleClick = (0, react_1.useCallback)(function (event) {
        onSelectAll({ limit: limit, queryOptions: queryOptions });
        if (onClick)
            onClick(event);
    }, [onClick, onSelectAll, queryOptions, limit]);
    var areAllDataSelected = data && data.every(function (item) { return selectedIds.includes(item.id); });
    if (total === selectedIds.length ||
        selectedIds.length >= limit ||
        !areAllDataSelected)
        return null;
    return (react_1.default.createElement(StyledButton, __assign({ label: label, onClick: handleClick, type: "button" }, rest)));
};
exports.SelectAllButton = SelectAllButton;
var PREFIX = 'RaSelectAllButton';
var StyledButton = (0, styles_1.styled)(Button_1.Button, {
    name: PREFIX,
    overridesResolver: function (props, styles) { return styles.root; },
})(function (_a) {
    var theme = _a.theme;
    return ({
        '&:hover': {
            backgroundColor: "color-mix(in srgb, ".concat((theme.vars || theme).palette.primary.main, ", transparent 12%)"),
            // Reset on mouse devices
            '@media (hover: none)': {
                backgroundColor: 'transparent',
            },
        },
    });
});
//# sourceMappingURL=SelectAllButton.js.map
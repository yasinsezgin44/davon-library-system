/// <reference types="react" />
import { type Identifier } from '../types';
import { type RowClickFunctionBase } from './types';
export declare const DataTableCallbacksContext: import("react").Context<{
    handleSort?: ((event: any) => void) | undefined;
    handleToggleItem?: ((id: Identifier, event: any) => void) | undefined;
    isRowExpandable?: ((record: any) => boolean) | undefined;
    isRowSelectable?: ((record: any) => boolean) | undefined;
    onSelect?: ((ids: Identifier[]) => void) | undefined;
    rowClick?: string | false | RowClickFunctionBase | undefined;
}>;
export declare const useDataTableCallbacksContext: () => {
    handleSort?: ((event: any) => void) | undefined;
    handleToggleItem?: ((id: Identifier, event: any) => void) | undefined;
    isRowExpandable?: ((record: any) => boolean) | undefined;
    isRowSelectable?: ((record: any) => boolean) | undefined;
    onSelect?: ((ids: Identifier[]) => void) | undefined;
    rowClick?: string | false | RowClickFunctionBase | undefined;
};
//# sourceMappingURL=DataTableCallbacksContext.d.ts.map
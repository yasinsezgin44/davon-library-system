var Ht = Object.defineProperty;
var qt = (t, e, r) => e in t ? Ht(t, e, { enumerable: !0, configurable: !0, writable: !0, value: r }) : t[e] = r;
var p = (t, e, r) => qt(t, typeof e != "symbol" ? e + "" : e, r);
var B = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function oe(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
var zt = Array.isArray, O = zt, Vt = typeof B == "object" && B && B.Object === Object && B, ut = Vt, Jt = ut, Qt = typeof self == "object" && self && self.Object === Object && self, Wt = Jt || Qt || Function("return this")(), A = Wt, Yt = A, Xt = Yt.Symbol, L = Xt, we = L, ft = Object.prototype, Zt = ft.hasOwnProperty, kt = ft.toString, M = we ? we.toStringTag : void 0;
function er(t) {
  var e = Zt.call(t, M), r = t[M];
  try {
    t[M] = void 0;
    var a = !0;
  } catch {
  }
  var n = kt.call(t);
  return a && (e ? t[M] = r : delete t[M]), n;
}
var tr = er, rr = Object.prototype, ar = rr.toString;
function nr(t) {
  return ar.call(t);
}
var sr = nr, Te = L, ir = tr, or = sr, cr = "[object Null]", lr = "[object Undefined]", Oe = Te ? Te.toStringTag : void 0;
function ur(t) {
  return t == null ? t === void 0 ? lr : cr : Oe && Oe in Object(t) ? ir(t) : or(t);
}
var R = ur;
function fr(t) {
  return t != null && typeof t == "object";
}
var C = fr, dr = R, hr = C, gr = "[object Symbol]";
function pr(t) {
  return typeof t == "symbol" || hr(t) && dr(t) == gr;
}
var ce = pr, yr = O, br = ce, vr = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, $r = /^\w*$/;
function _r(t, e) {
  if (yr(t))
    return !1;
  var r = typeof t;
  return r == "number" || r == "symbol" || r == "boolean" || t == null || br(t) ? !0 : $r.test(t) || !vr.test(t) || e != null && t in Object(e);
}
var mr = _r;
function Ar(t) {
  var e = typeof t;
  return t != null && (e == "object" || e == "function");
}
var E = Ar, wr = R, Tr = E, Or = "[object AsyncFunction]", Cr = "[object Function]", Sr = "[object GeneratorFunction]", Er = "[object Proxy]";
function jr(t) {
  if (!Tr(t))
    return !1;
  var e = wr(t);
  return e == Cr || e == Sr || e == Or || e == Er;
}
var dt = jr, Ir = A, Pr = Ir["__core-js_shared__"], xr = Pr, k = xr, Ce = function() {
  var t = /[^.]+$/.exec(k && k.keys && k.keys.IE_PROTO || "");
  return t ? "Symbol(src)_1." + t : "";
}();
function Nr(t) {
  return !!Ce && Ce in t;
}
var Mr = Nr, Lr = Function.prototype, Rr = Lr.toString;
function Dr(t) {
  if (t != null) {
    try {
      return Rr.call(t);
    } catch {
    }
    try {
      return t + "";
    } catch {
    }
  }
  return "";
}
var ht = Dr, Fr = dt, Br = Mr, Ur = E, Gr = ht, Kr = /[\\^$.*+?()[\]{}|]/g, Hr = /^\[object .+?Constructor\]$/, qr = Function.prototype, zr = Object.prototype, Vr = qr.toString, Jr = zr.hasOwnProperty, Qr = RegExp(
  "^" + Vr.call(Jr).replace(Kr, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function Wr(t) {
  if (!Ur(t) || Br(t))
    return !1;
  var e = Fr(t) ? Qr : Hr;
  return e.test(Gr(t));
}
var Yr = Wr;
function Xr(t, e) {
  return t == null ? void 0 : t[e];
}
var Zr = Xr, kr = Yr, ea = Zr;
function ta(t, e) {
  var r = ea(t, e);
  return kr(r) ? r : void 0;
}
var S = ta, ra = S, aa = ra(Object, "create"), V = aa, Se = V;
function na() {
  this.__data__ = Se ? Se(null) : {}, this.size = 0;
}
var sa = na;
function ia(t) {
  var e = this.has(t) && delete this.__data__[t];
  return this.size -= e ? 1 : 0, e;
}
var oa = ia, ca = V, la = "__lodash_hash_undefined__", ua = Object.prototype, fa = ua.hasOwnProperty;
function da(t) {
  var e = this.__data__;
  if (ca) {
    var r = e[t];
    return r === la ? void 0 : r;
  }
  return fa.call(e, t) ? e[t] : void 0;
}
var ha = da, ga = V, pa = Object.prototype, ya = pa.hasOwnProperty;
function ba(t) {
  var e = this.__data__;
  return ga ? e[t] !== void 0 : ya.call(e, t);
}
var va = ba, $a = V, _a = "__lodash_hash_undefined__";
function ma(t, e) {
  var r = this.__data__;
  return this.size += this.has(t) ? 0 : 1, r[t] = $a && e === void 0 ? _a : e, this;
}
var Aa = ma, wa = sa, Ta = oa, Oa = ha, Ca = va, Sa = Aa;
function j(t) {
  var e = -1, r = t == null ? 0 : t.length;
  for (this.clear(); ++e < r; ) {
    var a = t[e];
    this.set(a[0], a[1]);
  }
}
j.prototype.clear = wa;
j.prototype.delete = Ta;
j.prototype.get = Oa;
j.prototype.has = Ca;
j.prototype.set = Sa;
var Ea = j;
function ja() {
  this.__data__ = [], this.size = 0;
}
var Ia = ja;
function Pa(t, e) {
  return t === e || t !== t && e !== e;
}
var le = Pa, xa = le;
function Na(t, e) {
  for (var r = t.length; r--; )
    if (xa(t[r][0], e))
      return r;
  return -1;
}
var J = Na, Ma = J, La = Array.prototype, Ra = La.splice;
function Da(t) {
  var e = this.__data__, r = Ma(e, t);
  if (r < 0)
    return !1;
  var a = e.length - 1;
  return r == a ? e.pop() : Ra.call(e, r, 1), --this.size, !0;
}
var Fa = Da, Ba = J;
function Ua(t) {
  var e = this.__data__, r = Ba(e, t);
  return r < 0 ? void 0 : e[r][1];
}
var Ga = Ua, Ka = J;
function Ha(t) {
  return Ka(this.__data__, t) > -1;
}
var qa = Ha, za = J;
function Va(t, e) {
  var r = this.__data__, a = za(r, t);
  return a < 0 ? (++this.size, r.push([t, e])) : r[a][1] = e, this;
}
var Ja = Va, Qa = Ia, Wa = Fa, Ya = Ga, Xa = qa, Za = Ja;
function I(t) {
  var e = -1, r = t == null ? 0 : t.length;
  for (this.clear(); ++e < r; ) {
    var a = t[e];
    this.set(a[0], a[1]);
  }
}
I.prototype.clear = Qa;
I.prototype.delete = Wa;
I.prototype.get = Ya;
I.prototype.has = Xa;
I.prototype.set = Za;
var Q = I, ka = S, en = A, tn = ka(en, "Map"), ue = tn, Ee = Ea, rn = Q, an = ue;
function nn() {
  this.size = 0, this.__data__ = {
    hash: new Ee(),
    map: new (an || rn)(),
    string: new Ee()
  };
}
var sn = nn;
function on(t) {
  var e = typeof t;
  return e == "string" || e == "number" || e == "symbol" || e == "boolean" ? t !== "__proto__" : t === null;
}
var cn = on, ln = cn;
function un(t, e) {
  var r = t.__data__;
  return ln(e) ? r[typeof e == "string" ? "string" : "hash"] : r.map;
}
var W = un, fn = W;
function dn(t) {
  var e = fn(this, t).delete(t);
  return this.size -= e ? 1 : 0, e;
}
var hn = dn, gn = W;
function pn(t) {
  return gn(this, t).get(t);
}
var yn = pn, bn = W;
function vn(t) {
  return bn(this, t).has(t);
}
var $n = vn, _n = W;
function mn(t, e) {
  var r = _n(this, t), a = r.size;
  return r.set(t, e), this.size += r.size == a ? 0 : 1, this;
}
var An = mn, wn = sn, Tn = hn, On = yn, Cn = $n, Sn = An;
function P(t) {
  var e = -1, r = t == null ? 0 : t.length;
  for (this.clear(); ++e < r; ) {
    var a = t[e];
    this.set(a[0], a[1]);
  }
}
P.prototype.clear = wn;
P.prototype.delete = Tn;
P.prototype.get = On;
P.prototype.has = Cn;
P.prototype.set = Sn;
var fe = P, gt = fe, En = "Expected a function";
function de(t, e) {
  if (typeof t != "function" || e != null && typeof e != "function")
    throw new TypeError(En);
  var r = function() {
    var a = arguments, n = e ? e.apply(this, a) : a[0], s = r.cache;
    if (s.has(n))
      return s.get(n);
    var i = t.apply(this, a);
    return r.cache = s.set(n, i) || s, i;
  };
  return r.cache = new (de.Cache || gt)(), r;
}
de.Cache = gt;
var jn = de, In = jn, Pn = 500;
function xn(t) {
  var e = In(t, function(a) {
    return r.size === Pn && r.clear(), a;
  }), r = e.cache;
  return e;
}
var Nn = xn, Mn = Nn, Ln = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Rn = /\\(\\)?/g, Dn = Mn(function(t) {
  var e = [];
  return t.charCodeAt(0) === 46 && e.push(""), t.replace(Ln, function(r, a, n, s) {
    e.push(n ? s.replace(Rn, "$1") : a || r);
  }), e;
}), Fn = Dn;
function Bn(t, e) {
  for (var r = -1, a = t == null ? 0 : t.length, n = Array(a); ++r < a; )
    n[r] = e(t[r], r, t);
  return n;
}
var Un = Bn, je = L, Gn = Un, Kn = O, Hn = ce, qn = 1 / 0, Ie = je ? je.prototype : void 0, Pe = Ie ? Ie.toString : void 0;
function pt(t) {
  if (typeof t == "string")
    return t;
  if (Kn(t))
    return Gn(t, pt) + "";
  if (Hn(t))
    return Pe ? Pe.call(t) : "";
  var e = t + "";
  return e == "0" && 1 / t == -qn ? "-0" : e;
}
var zn = pt, Vn = zn;
function Jn(t) {
  return t == null ? "" : Vn(t);
}
var Qn = Jn, Wn = O, Yn = mr, Xn = Fn, Zn = Qn;
function kn(t, e) {
  return Wn(t) ? t : Yn(t, e) ? [t] : Xn(Zn(t));
}
var es = kn, ts = ce, rs = 1 / 0;
function as(t) {
  if (typeof t == "string" || ts(t))
    return t;
  var e = t + "";
  return e == "0" && 1 / t == -rs ? "-0" : e;
}
var ns = as, ss = es, is = ns;
function os(t, e) {
  e = ss(e, t);
  for (var r = 0, a = e.length; t != null && r < a; )
    t = t[is(e[r++])];
  return r && r == a ? t : void 0;
}
var cs = os, ls = cs;
function us(t, e, r) {
  var a = t == null ? void 0 : ls(t, e);
  return a === void 0 ? r : a;
}
var fs = us;
const y = /* @__PURE__ */ oe(fs);
var ds = Q;
function hs() {
  this.__data__ = new ds(), this.size = 0;
}
var gs = hs;
function ps(t) {
  var e = this.__data__, r = e.delete(t);
  return this.size = e.size, r;
}
var ys = ps;
function bs(t) {
  return this.__data__.get(t);
}
var vs = bs;
function $s(t) {
  return this.__data__.has(t);
}
var _s = $s, ms = Q, As = ue, ws = fe, Ts = 200;
function Os(t, e) {
  var r = this.__data__;
  if (r instanceof ms) {
    var a = r.__data__;
    if (!As || a.length < Ts - 1)
      return a.push([t, e]), this.size = ++r.size, this;
    r = this.__data__ = new ws(a);
  }
  return r.set(t, e), this.size = r.size, this;
}
var Cs = Os, Ss = Q, Es = gs, js = ys, Is = vs, Ps = _s, xs = Cs;
function x(t) {
  var e = this.__data__ = new Ss(t);
  this.size = e.size;
}
x.prototype.clear = Es;
x.prototype.delete = js;
x.prototype.get = Is;
x.prototype.has = Ps;
x.prototype.set = xs;
var he = x;
function Ns(t, e) {
  for (var r = -1, a = t == null ? 0 : t.length; ++r < a && e(t[r], r, t) !== !1; )
    ;
  return t;
}
var Ms = Ns, Ls = S, Rs = function() {
  try {
    var t = Ls(Object, "defineProperty");
    return t({}, "", {}), t;
  } catch {
  }
}(), Ds = Rs, xe = Ds;
function Fs(t, e, r) {
  e == "__proto__" && xe ? xe(t, e, {
    configurable: !0,
    enumerable: !0,
    value: r,
    writable: !0
  }) : t[e] = r;
}
var yt = Fs, Bs = yt, Us = le, Gs = Object.prototype, Ks = Gs.hasOwnProperty;
function Hs(t, e, r) {
  var a = t[e];
  (!(Ks.call(t, e) && Us(a, r)) || r === void 0 && !(e in t)) && Bs(t, e, r);
}
var bt = Hs, qs = bt, zs = yt;
function Vs(t, e, r, a) {
  var n = !r;
  r || (r = {});
  for (var s = -1, i = e.length; ++s < i; ) {
    var o = e[s], c = a ? a(r[o], t[o], o, r, t) : void 0;
    c === void 0 && (c = t[o]), n ? zs(r, o, c) : qs(r, o, c);
  }
  return r;
}
var Y = Vs;
function Js(t, e) {
  for (var r = -1, a = Array(t); ++r < t; )
    a[r] = e(r);
  return a;
}
var Qs = Js, Ws = R, Ys = C, Xs = "[object Arguments]";
function Zs(t) {
  return Ys(t) && Ws(t) == Xs;
}
var ks = Zs, Ne = ks, ei = C, vt = Object.prototype, ti = vt.hasOwnProperty, ri = vt.propertyIsEnumerable, ai = Ne(/* @__PURE__ */ function() {
  return arguments;
}()) ? Ne : function(t) {
  return ei(t) && ti.call(t, "callee") && !ri.call(t, "callee");
}, ni = ai, K = { exports: {} };
function si() {
  return !1;
}
var ii = si;
K.exports;
(function(t, e) {
  var r = A, a = ii, n = e && !e.nodeType && e, s = n && !0 && t && !t.nodeType && t, i = s && s.exports === n, o = i ? r.Buffer : void 0, c = o ? o.isBuffer : void 0, l = c || a;
  t.exports = l;
})(K, K.exports);
var ge = K.exports, oi = 9007199254740991, ci = /^(?:0|[1-9]\d*)$/;
function li(t, e) {
  var r = typeof t;
  return e = e ?? oi, !!e && (r == "number" || r != "symbol" && ci.test(t)) && t > -1 && t % 1 == 0 && t < e;
}
var ui = li, fi = 9007199254740991;
function di(t) {
  return typeof t == "number" && t > -1 && t % 1 == 0 && t <= fi;
}
var $t = di, hi = R, gi = $t, pi = C, yi = "[object Arguments]", bi = "[object Array]", vi = "[object Boolean]", $i = "[object Date]", _i = "[object Error]", mi = "[object Function]", Ai = "[object Map]", wi = "[object Number]", Ti = "[object Object]", Oi = "[object RegExp]", Ci = "[object Set]", Si = "[object String]", Ei = "[object WeakMap]", ji = "[object ArrayBuffer]", Ii = "[object DataView]", Pi = "[object Float32Array]", xi = "[object Float64Array]", Ni = "[object Int8Array]", Mi = "[object Int16Array]", Li = "[object Int32Array]", Ri = "[object Uint8Array]", Di = "[object Uint8ClampedArray]", Fi = "[object Uint16Array]", Bi = "[object Uint32Array]", g = {};
g[Pi] = g[xi] = g[Ni] = g[Mi] = g[Li] = g[Ri] = g[Di] = g[Fi] = g[Bi] = !0;
g[yi] = g[bi] = g[ji] = g[vi] = g[Ii] = g[$i] = g[_i] = g[mi] = g[Ai] = g[wi] = g[Ti] = g[Oi] = g[Ci] = g[Si] = g[Ei] = !1;
function Ui(t) {
  return pi(t) && gi(t.length) && !!g[hi(t)];
}
var Gi = Ui;
function Ki(t) {
  return function(e) {
    return t(e);
  };
}
var pe = Ki, H = { exports: {} };
H.exports;
(function(t, e) {
  var r = ut, a = e && !e.nodeType && e, n = a && !0 && t && !t.nodeType && t, s = n && n.exports === a, i = s && r.process, o = function() {
    try {
      var c = n && n.require && n.require("util").types;
      return c || i && i.binding && i.binding("util");
    } catch {
    }
  }();
  t.exports = o;
})(H, H.exports);
var ye = H.exports, Hi = Gi, qi = pe, Me = ye, Le = Me && Me.isTypedArray, zi = Le ? qi(Le) : Hi, _t = zi, Vi = Qs, Ji = ni, Qi = O, Wi = ge, Yi = ui, Xi = _t, Zi = Object.prototype, ki = Zi.hasOwnProperty;
function eo(t, e) {
  var r = Qi(t), a = !r && Ji(t), n = !r && !a && Wi(t), s = !r && !a && !n && Xi(t), i = r || a || n || s, o = i ? Vi(t.length, String) : [], c = o.length;
  for (var l in t)
    (e || ki.call(t, l)) && !(i && // Safari 9 has enumerable `arguments.length` in strict mode.
    (l == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    n && (l == "offset" || l == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    s && (l == "buffer" || l == "byteLength" || l == "byteOffset") || // Skip index properties.
    Yi(l, c))) && o.push(l);
  return o;
}
var mt = eo, to = Object.prototype;
function ro(t) {
  var e = t && t.constructor, r = typeof e == "function" && e.prototype || to;
  return t === r;
}
var be = ro;
function ao(t, e) {
  return function(r) {
    return t(e(r));
  };
}
var At = ao, no = At, so = no(Object.keys, Object), io = so, oo = be, co = io, lo = Object.prototype, uo = lo.hasOwnProperty;
function fo(t) {
  if (!oo(t))
    return co(t);
  var e = [];
  for (var r in Object(t))
    uo.call(t, r) && r != "constructor" && e.push(r);
  return e;
}
var ho = fo, go = dt, po = $t;
function yo(t) {
  return t != null && po(t.length) && !go(t);
}
var wt = yo, bo = mt, vo = ho, $o = wt;
function _o(t) {
  return $o(t) ? bo(t) : vo(t);
}
var X = _o, mo = Y, Ao = X;
function wo(t, e) {
  return t && mo(e, Ao(e), t);
}
var To = wo;
function Oo(t) {
  var e = [];
  if (t != null)
    for (var r in Object(t))
      e.push(r);
  return e;
}
var Co = Oo, So = E, Eo = be, jo = Co, Io = Object.prototype, Po = Io.hasOwnProperty;
function xo(t) {
  if (!So(t))
    return jo(t);
  var e = Eo(t), r = [];
  for (var a in t)
    a == "constructor" && (e || !Po.call(t, a)) || r.push(a);
  return r;
}
var No = xo, Mo = mt, Lo = No, Ro = wt;
function Do(t) {
  return Ro(t) ? Mo(t, !0) : Lo(t);
}
var ve = Do, Fo = Y, Bo = ve;
function Uo(t, e) {
  return t && Fo(e, Bo(e), t);
}
var Go = Uo, q = { exports: {} };
q.exports;
(function(t, e) {
  var r = A, a = e && !e.nodeType && e, n = a && !0 && t && !t.nodeType && t, s = n && n.exports === a, i = s ? r.Buffer : void 0, o = i ? i.allocUnsafe : void 0;
  function c(l, u) {
    if (u)
      return l.slice();
    var f = l.length, d = o ? o(f) : new l.constructor(f);
    return l.copy(d), d;
  }
  t.exports = c;
})(q, q.exports);
var Ko = q.exports;
function Ho(t, e) {
  var r = -1, a = t.length;
  for (e || (e = Array(a)); ++r < a; )
    e[r] = t[r];
  return e;
}
var qo = Ho;
function zo(t, e) {
  for (var r = -1, a = t == null ? 0 : t.length, n = 0, s = []; ++r < a; ) {
    var i = t[r];
    e(i, r, t) && (s[n++] = i);
  }
  return s;
}
var Vo = zo;
function Jo() {
  return [];
}
var Tt = Jo, Qo = Vo, Wo = Tt, Yo = Object.prototype, Xo = Yo.propertyIsEnumerable, Re = Object.getOwnPropertySymbols, Zo = Re ? function(t) {
  return t == null ? [] : (t = Object(t), Qo(Re(t), function(e) {
    return Xo.call(t, e);
  }));
} : Wo, $e = Zo, ko = Y, ec = $e;
function tc(t, e) {
  return ko(t, ec(t), e);
}
var rc = tc;
function ac(t, e) {
  for (var r = -1, a = e.length, n = t.length; ++r < a; )
    t[n + r] = e[r];
  return t;
}
var Ot = ac, nc = At, sc = nc(Object.getPrototypeOf, Object), Ct = sc, ic = Ot, oc = Ct, cc = $e, lc = Tt, uc = Object.getOwnPropertySymbols, fc = uc ? function(t) {
  for (var e = []; t; )
    ic(e, cc(t)), t = oc(t);
  return e;
} : lc, St = fc, dc = Y, hc = St;
function gc(t, e) {
  return dc(t, hc(t), e);
}
var pc = gc, yc = Ot, bc = O;
function vc(t, e, r) {
  var a = e(t);
  return bc(t) ? a : yc(a, r(t));
}
var Et = vc, $c = Et, _c = $e, mc = X;
function Ac(t) {
  return $c(t, mc, _c);
}
var jt = Ac, wc = Et, Tc = St, Oc = ve;
function Cc(t) {
  return wc(t, Oc, Tc);
}
var Sc = Cc, Ec = S, jc = A, Ic = Ec(jc, "DataView"), Pc = Ic, xc = S, Nc = A, Mc = xc(Nc, "Promise"), Lc = Mc, Rc = S, Dc = A, Fc = Rc(Dc, "Set"), Bc = Fc, Uc = S, Gc = A, Kc = Uc(Gc, "WeakMap"), Hc = Kc, re = Pc, ae = ue, ne = Lc, se = Bc, ie = Hc, It = R, N = ht, De = "[object Map]", qc = "[object Object]", Fe = "[object Promise]", Be = "[object Set]", Ue = "[object WeakMap]", Ge = "[object DataView]", zc = N(re), Vc = N(ae), Jc = N(ne), Qc = N(se), Wc = N(ie), T = It;
(re && T(new re(new ArrayBuffer(1))) != Ge || ae && T(new ae()) != De || ne && T(ne.resolve()) != Fe || se && T(new se()) != Be || ie && T(new ie()) != Ue) && (T = function(t) {
  var e = It(t), r = e == qc ? t.constructor : void 0, a = r ? N(r) : "";
  if (a)
    switch (a) {
      case zc:
        return Ge;
      case Vc:
        return De;
      case Jc:
        return Fe;
      case Qc:
        return Be;
      case Wc:
        return Ue;
    }
  return e;
});
var Z = T, Yc = Object.prototype, Xc = Yc.hasOwnProperty;
function Zc(t) {
  var e = t.length, r = new t.constructor(e);
  return e && typeof t[0] == "string" && Xc.call(t, "index") && (r.index = t.index, r.input = t.input), r;
}
var kc = Zc, el = A, tl = el.Uint8Array, Pt = tl, Ke = Pt;
function rl(t) {
  var e = new t.constructor(t.byteLength);
  return new Ke(e).set(new Ke(t)), e;
}
var _e = rl, al = _e;
function nl(t, e) {
  var r = e ? al(t.buffer) : t.buffer;
  return new t.constructor(r, t.byteOffset, t.byteLength);
}
var sl = nl, il = /\w*$/;
function ol(t) {
  var e = new t.constructor(t.source, il.exec(t));
  return e.lastIndex = t.lastIndex, e;
}
var cl = ol, He = L, qe = He ? He.prototype : void 0, ze = qe ? qe.valueOf : void 0;
function ll(t) {
  return ze ? Object(ze.call(t)) : {};
}
var ul = ll, fl = _e;
function dl(t, e) {
  var r = e ? fl(t.buffer) : t.buffer;
  return new t.constructor(r, t.byteOffset, t.length);
}
var hl = dl, gl = _e, pl = sl, yl = cl, bl = ul, vl = hl, $l = "[object Boolean]", _l = "[object Date]", ml = "[object Map]", Al = "[object Number]", wl = "[object RegExp]", Tl = "[object Set]", Ol = "[object String]", Cl = "[object Symbol]", Sl = "[object ArrayBuffer]", El = "[object DataView]", jl = "[object Float32Array]", Il = "[object Float64Array]", Pl = "[object Int8Array]", xl = "[object Int16Array]", Nl = "[object Int32Array]", Ml = "[object Uint8Array]", Ll = "[object Uint8ClampedArray]", Rl = "[object Uint16Array]", Dl = "[object Uint32Array]";
function Fl(t, e, r) {
  var a = t.constructor;
  switch (e) {
    case Sl:
      return gl(t);
    case $l:
    case _l:
      return new a(+t);
    case El:
      return pl(t, r);
    case jl:
    case Il:
    case Pl:
    case xl:
    case Nl:
    case Ml:
    case Ll:
    case Rl:
    case Dl:
      return vl(t, r);
    case ml:
      return new a();
    case Al:
    case Ol:
      return new a(t);
    case wl:
      return yl(t);
    case Tl:
      return new a();
    case Cl:
      return bl(t);
  }
}
var Bl = Fl, Ul = E, Ve = Object.create, Gl = /* @__PURE__ */ function() {
  function t() {
  }
  return function(e) {
    if (!Ul(e))
      return {};
    if (Ve)
      return Ve(e);
    t.prototype = e;
    var r = new t();
    return t.prototype = void 0, r;
  };
}(), Kl = Gl, Hl = Kl, ql = Ct, zl = be;
function Vl(t) {
  return typeof t.constructor == "function" && !zl(t) ? Hl(ql(t)) : {};
}
var Jl = Vl, Ql = Z, Wl = C, Yl = "[object Map]";
function Xl(t) {
  return Wl(t) && Ql(t) == Yl;
}
var Zl = Xl, kl = Zl, eu = pe, Je = ye, Qe = Je && Je.isMap, tu = Qe ? eu(Qe) : kl, ru = tu, au = Z, nu = C, su = "[object Set]";
function iu(t) {
  return nu(t) && au(t) == su;
}
var ou = iu, cu = ou, lu = pe, We = ye, Ye = We && We.isSet, uu = Ye ? lu(Ye) : cu, fu = uu, du = he, hu = Ms, gu = bt, pu = To, yu = Go, bu = Ko, vu = qo, $u = rc, _u = pc, mu = jt, Au = Sc, wu = Z, Tu = kc, Ou = Bl, Cu = Jl, Su = O, Eu = ge, ju = ru, Iu = E, Pu = fu, xu = X, Nu = ve, Mu = 1, Lu = 2, Ru = 4, xt = "[object Arguments]", Du = "[object Array]", Fu = "[object Boolean]", Bu = "[object Date]", Uu = "[object Error]", Nt = "[object Function]", Gu = "[object GeneratorFunction]", Ku = "[object Map]", Hu = "[object Number]", Mt = "[object Object]", qu = "[object RegExp]", zu = "[object Set]", Vu = "[object String]", Ju = "[object Symbol]", Qu = "[object WeakMap]", Wu = "[object ArrayBuffer]", Yu = "[object DataView]", Xu = "[object Float32Array]", Zu = "[object Float64Array]", ku = "[object Int8Array]", ef = "[object Int16Array]", tf = "[object Int32Array]", rf = "[object Uint8Array]", af = "[object Uint8ClampedArray]", nf = "[object Uint16Array]", sf = "[object Uint32Array]", h = {};
h[xt] = h[Du] = h[Wu] = h[Yu] = h[Fu] = h[Bu] = h[Xu] = h[Zu] = h[ku] = h[ef] = h[tf] = h[Ku] = h[Hu] = h[Mt] = h[qu] = h[zu] = h[Vu] = h[Ju] = h[rf] = h[af] = h[nf] = h[sf] = !0;
h[Uu] = h[Nt] = h[Qu] = !1;
function G(t, e, r, a, n, s) {
  var i, o = e & Mu, c = e & Lu, l = e & Ru;
  if (r && (i = n ? r(t, a, n, s) : r(t)), i !== void 0)
    return i;
  if (!Iu(t))
    return t;
  var u = Su(t);
  if (u) {
    if (i = Tu(t), !o)
      return vu(t, i);
  } else {
    var f = wu(t), d = f == Nt || f == Gu;
    if (Eu(t))
      return bu(t, o);
    if (f == Mt || f == xt || d && !n) {
      if (i = c || d ? {} : Cu(t), !o)
        return c ? _u(t, yu(i, t)) : $u(t, pu(i, t));
    } else {
      if (!h[f])
        return n ? t : {};
      i = Ou(t, f, o);
    }
  }
  s || (s = new du());
  var m = s.get(t);
  if (m)
    return m;
  s.set(t, i), Pu(t) ? t.forEach(function(b) {
    i.add(G(b, e, r, b, t, s));
  }) : ju(t) && t.forEach(function(b, v) {
    i.set(v, G(b, e, r, v, t, s));
  });
  var $ = l ? c ? Au : mu : c ? Nu : xu, _ = u ? void 0 : $(t);
  return hu(_ || t, function(b, v) {
    _ && (v = b, b = t[v]), gu(i, v, G(b, e, r, v, t, s));
  }), i;
}
var Lt = G, of = "__lodash_hash_undefined__";
function cf(t) {
  return this.__data__.set(t, of), this;
}
var lf = cf;
function uf(t) {
  return this.__data__.has(t);
}
var ff = uf, df = fe, hf = lf, gf = ff;
function z(t) {
  var e = -1, r = t == null ? 0 : t.length;
  for (this.__data__ = new df(); ++e < r; )
    this.add(t[e]);
}
z.prototype.add = z.prototype.push = hf;
z.prototype.has = gf;
var pf = z;
function yf(t, e) {
  for (var r = -1, a = t == null ? 0 : t.length; ++r < a; )
    if (e(t[r], r, t))
      return !0;
  return !1;
}
var bf = yf;
function vf(t, e) {
  return t.has(e);
}
var $f = vf, _f = pf, mf = bf, Af = $f, wf = 1, Tf = 2;
function Of(t, e, r, a, n, s) {
  var i = r & wf, o = t.length, c = e.length;
  if (o != c && !(i && c > o))
    return !1;
  var l = s.get(t), u = s.get(e);
  if (l && u)
    return l == e && u == t;
  var f = -1, d = !0, m = r & Tf ? new _f() : void 0;
  for (s.set(t, e), s.set(e, t); ++f < o; ) {
    var $ = t[f], _ = e[f];
    if (a)
      var b = i ? a(_, $, f, e, t, s) : a($, _, f, t, e, s);
    if (b !== void 0) {
      if (b)
        continue;
      d = !1;
      break;
    }
    if (m) {
      if (!mf(e, function(v, w) {
        if (!Af(m, w) && ($ === v || n($, v, r, a, s)))
          return m.push(w);
      })) {
        d = !1;
        break;
      }
    } else if (!($ === _ || n($, _, r, a, s))) {
      d = !1;
      break;
    }
  }
  return s.delete(t), s.delete(e), d;
}
var Rt = Of;
function Cf(t) {
  var e = -1, r = Array(t.size);
  return t.forEach(function(a, n) {
    r[++e] = [n, a];
  }), r;
}
var Sf = Cf;
function Ef(t) {
  var e = -1, r = Array(t.size);
  return t.forEach(function(a) {
    r[++e] = a;
  }), r;
}
var jf = Ef, Xe = L, Ze = Pt, If = le, Pf = Rt, xf = Sf, Nf = jf, Mf = 1, Lf = 2, Rf = "[object Boolean]", Df = "[object Date]", Ff = "[object Error]", Bf = "[object Map]", Uf = "[object Number]", Gf = "[object RegExp]", Kf = "[object Set]", Hf = "[object String]", qf = "[object Symbol]", zf = "[object ArrayBuffer]", Vf = "[object DataView]", ke = Xe ? Xe.prototype : void 0, ee = ke ? ke.valueOf : void 0;
function Jf(t, e, r, a, n, s, i) {
  switch (r) {
    case Vf:
      if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset)
        return !1;
      t = t.buffer, e = e.buffer;
    case zf:
      return !(t.byteLength != e.byteLength || !s(new Ze(t), new Ze(e)));
    case Rf:
    case Df:
    case Uf:
      return If(+t, +e);
    case Ff:
      return t.name == e.name && t.message == e.message;
    case Gf:
    case Hf:
      return t == e + "";
    case Bf:
      var o = xf;
    case Kf:
      var c = a & Mf;
      if (o || (o = Nf), t.size != e.size && !c)
        return !1;
      var l = i.get(t);
      if (l)
        return l == e;
      a |= Lf, i.set(t, e);
      var u = Pf(o(t), o(e), a, n, s, i);
      return i.delete(t), u;
    case qf:
      if (ee)
        return ee.call(t) == ee.call(e);
  }
  return !1;
}
var Qf = Jf, et = jt, Wf = 1, Yf = Object.prototype, Xf = Yf.hasOwnProperty;
function Zf(t, e, r, a, n, s) {
  var i = r & Wf, o = et(t), c = o.length, l = et(e), u = l.length;
  if (c != u && !i)
    return !1;
  for (var f = c; f--; ) {
    var d = o[f];
    if (!(i ? d in e : Xf.call(e, d)))
      return !1;
  }
  var m = s.get(t), $ = s.get(e);
  if (m && $)
    return m == e && $ == t;
  var _ = !0;
  s.set(t, e), s.set(e, t);
  for (var b = i; ++f < c; ) {
    d = o[f];
    var v = t[d], w = e[d];
    if (a)
      var Ae = i ? a(w, v, d, e, t, s) : a(v, w, d, t, e, s);
    if (!(Ae === void 0 ? v === w || n(v, w, r, a, s) : Ae)) {
      _ = !1;
      break;
    }
    b || (b = d == "constructor");
  }
  if (_ && !b) {
    var D = t.constructor, F = e.constructor;
    D != F && "constructor" in t && "constructor" in e && !(typeof D == "function" && D instanceof D && typeof F == "function" && F instanceof F) && (_ = !1);
  }
  return s.delete(t), s.delete(e), _;
}
var kf = Zf, te = he, ed = Rt, td = Qf, rd = kf, tt = Z, rt = O, at = ge, ad = _t, nd = 1, nt = "[object Arguments]", st = "[object Array]", U = "[object Object]", sd = Object.prototype, it = sd.hasOwnProperty;
function id(t, e, r, a, n, s) {
  var i = rt(t), o = rt(e), c = i ? st : tt(t), l = o ? st : tt(e);
  c = c == nt ? U : c, l = l == nt ? U : l;
  var u = c == U, f = l == U, d = c == l;
  if (d && at(t)) {
    if (!at(e))
      return !1;
    i = !0, u = !1;
  }
  if (d && !u)
    return s || (s = new te()), i || ad(t) ? ed(t, e, r, a, n, s) : td(t, e, c, r, a, n, s);
  if (!(r & nd)) {
    var m = u && it.call(t, "__wrapped__"), $ = f && it.call(e, "__wrapped__");
    if (m || $) {
      var _ = m ? t.value() : t, b = $ ? e.value() : e;
      return s || (s = new te()), n(_, b, r, a, s);
    }
  }
  return d ? (s || (s = new te()), rd(t, e, r, a, n, s)) : !1;
}
var od = id, cd = od, ot = C;
function Dt(t, e, r, a, n) {
  return t === e ? !0 : t == null || e == null || !ot(t) && !ot(e) ? t !== t && e !== e : cd(t, e, r, a, Dt, n);
}
var ld = Dt, ud = he, fd = ld, dd = 1, hd = 2;
function gd(t, e, r, a) {
  var n = r.length, s = n, i = !a;
  if (t == null)
    return !s;
  for (t = Object(t); n--; ) {
    var o = r[n];
    if (i && o[2] ? o[1] !== t[o[0]] : !(o[0] in t))
      return !1;
  }
  for (; ++n < s; ) {
    o = r[n];
    var c = o[0], l = t[c], u = o[1];
    if (i && o[2]) {
      if (l === void 0 && !(c in t))
        return !1;
    } else {
      var f = new ud();
      if (a)
        var d = a(l, u, c, t, e, f);
      if (!(d === void 0 ? fd(u, l, dd | hd, a, f) : d))
        return !1;
    }
  }
  return !0;
}
var pd = gd, yd = E;
function bd(t) {
  return t === t && !yd(t);
}
var vd = bd, $d = vd, _d = X;
function md(t) {
  for (var e = _d(t), r = e.length; r--; ) {
    var a = e[r], n = t[a];
    e[r] = [a, n, $d(n)];
  }
  return e;
}
var Ad = md;
function wd(t, e) {
  return function(r) {
    return r == null ? !1 : r[t] === e && (e !== void 0 || t in Object(r));
  };
}
var Td = wd, Od = pd, Cd = Ad, Sd = Td;
function Ed(t) {
  var e = Cd(t);
  return e.length == 1 && e[0][2] ? Sd(e[0][0], e[0][1]) : function(r) {
    return r === t || Od(r, t, e);
  };
}
var jd = Ed, Id = Lt, Pd = jd, xd = 1;
function Nd(t) {
  return Pd(Id(t, xd));
}
var Md = Nd;
const Ld = /* @__PURE__ */ oe(Md);
var Rd = Lt, Dd = 1, Fd = 4;
function Bd(t) {
  return Rd(t, Dd | Fd);
}
var Ud = Bd;
const Ft = /* @__PURE__ */ oe(Ud);
class ct {
  constructor({
    items: e = [],
    identifierName: r = "id",
    getNewId: a
  } = {}) {
    p(this, "sequence", 0);
    p(this, "items", []);
    p(this, "database", null);
    p(this, "name", null);
    p(this, "identifierName", "id");
    p(this, "getNewId");
    if (!Array.isArray(e))
      throw new Error(
        "Can't initialize a Collection with anything else than an array of items"
      );
    this.identifierName = r, this.getNewId = a || this.getNewIdFromSequence, e.map(this.addOne.bind(this));
  }
  /**
   * A Collection may need to access other collections (e.g. for embedding references)
   * This is done through a reference to the parent database.
   */
  setDatabase(e) {
    this.database = e;
  }
  setName(e) {
    this.name = e;
  }
  /**
   * Get a one to many embedder function for a given resource name
   *
   * @example embed posts for an author
   *
   *     authorsCollection._oneToManyEmbedder('posts')
   *
   * @returns Function item => item
   */
  _oneToManyEmbedder(e) {
    if (this.name == null)
      throw new Error("Can't embed references without a collection name");
    const a = `${this.name.slice(0, -1)}_id`;
    return (n) => {
      if (this.database == null)
        throw new Error("Can't embed references without a database");
      const s = this.database.collections[e];
      if (!s)
        throw new Error(
          `Can't embed a non-existing collection ${e}`
        );
      return Array.isArray(n[e]) ? n[e] = s.getAll({
        filter: (i) => n[e].indexOf(
          i[s.identifierName]
        ) !== -1
      }) : n[e] = s.getAll({
        filter: (i) => i[a] === n[this.identifierName]
      }), n;
    };
  }
  /**
   * Get a many to one embedder function for a given resource name
   *
   * @example embed author for a post
   *
   *     postsCollection._manyToOneEmbedder('author')
   *
   * @returns Function item => item
   */
  _manyToOneEmbedder(e) {
    const r = `${e}s`, a = `${e}_id`;
    return (n) => {
      if (this.database == null)
        throw new Error("Can't embed references without a database");
      const s = this.database.collections[r];
      if (!s)
        throw new Error(
          `Can't embed a non-existing collection ${e}`
        );
      try {
        n[e] = s.getOne(
          n[a]
        );
      } catch {
      }
      return n;
    };
  }
  /**
   * @param String[] An array of resource names, e.g. ['books', 'country']
   * @returns Function item => item
   */
  _itemEmbedder(e) {
    const a = (Array.isArray(e) ? e : [e]).map(
      (n) => n.endsWith("s") ? this._oneToManyEmbedder(n) : this._manyToOneEmbedder(n)
    );
    return (n) => a.reduce(
      (s, i) => i(s),
      n
    );
  }
  getCount(e) {
    return this.getAll(e).length;
  }
  getAll(e) {
    let r = this.items.slice(0);
    return e && (e.filter && (r = Bt(r, e.filter)), e.sort && (r = qd(r, e.sort)), e.range && (r = zd(r, e.range)), r = r.map((a) => Object.assign({}, a)), e.embed && this.database && (r = r.map(this._itemEmbedder(e.embed)))), r;
  }
  getIndex(e) {
    return this.items.findIndex(
      // biome-ignore lint/suspicious/noDoubleEquals: we want implicit type coercion
      (r) => r[this.identifierName] == e
    );
  }
  getOne(e, r) {
    const a = this.getIndex(e);
    if (a === -1)
      throw new Error(`No item with identifier ${e}`);
    let n = this.items[a];
    return n = Object.assign({}, n), r != null && r.embed && this.database && (n = this._itemEmbedder(r.embed)(n)), n;
  }
  getNewIdFromSequence() {
    return this.sequence++;
  }
  addOne(e) {
    const r = Ft(e), a = r[this.identifierName];
    if (a != null) {
      if (this.getIndex(a) !== -1)
        throw new Error(
          `An item with the identifier ${a} already exists`
        );
      typeof a == "number" && (this.sequence = Math.max(this.sequence, a) + 1);
    } else
      r[this.identifierName] = this.getNewId();
    return this.items.push(r), r;
  }
  updateOne(e, r) {
    const a = this.getIndex(e);
    if (a === -1)
      throw new Error(`No item with identifier ${e}`);
    for (const n in r)
      this.items[a][n] = r[n];
    return Object.assign({}, this.items[a]);
  }
  removeOne(e) {
    const r = this.getIndex(e);
    if (r === -1)
      throw new Error(`No item with identifier ${e}`);
    const a = this.items[r];
    return this.items.splice(r, 1), typeof e == "number" && e == this.sequence - 1 && this.sequence--, a;
  }
}
const Gd = (t, e) => t.reduce((r, a) => r && e(a), !0), Kd = (t, e) => t.reduce((r, a) => r || e(a), !1), Hd = (t, e) => t.reduce(
  (r, a, n) => {
    if (r != null)
      return r;
    const s = t.slice(0, n + 1).join("."), i = t.slice(n + 1).join("."), o = y(e, s);
    return Array.isArray(o) && n < t.length - 1 ? [s, i] : void 0;
  },
  void 0
), lt = (t, e) => {
  if (t.indexOf("_q") !== -1) {
    const r = t.replace(/(_q)$/, ""), a = new RegExp(e.toString(), "i");
    return (n) => {
      var s;
      return ((s = y(n, r)) == null ? void 0 : s.toString().match(a)) !== null;
    };
  }
  if (t.indexOf("_lte") !== -1) {
    const r = t.replace(/(_lte)$/, "");
    return (a) => y(a, r) <= e;
  }
  if (t.indexOf("_gte") !== -1) {
    const r = t.replace(/(_gte)$/, "");
    return (a) => y(a, r) >= e;
  }
  if (t.indexOf("_lt") !== -1) {
    const r = t.replace(/(_lt)$/, "");
    return (a) => y(a, r) < e;
  }
  if (t.indexOf("_gt") !== -1) {
    const r = t.replace(/(_gt)$/, "");
    return (a) => y(a, r) > e;
  }
  if (t.indexOf("_neq_any") !== -1) {
    const r = t.replace(/(_neq_any)$/, ""), a = Array.isArray(e) ? e : [e];
    return (n) => a.every((s) => y(n, r) != s);
  }
  if (t.indexOf("_neq") !== -1) {
    const r = t.replace(/(_neq)$/, "");
    return (a) => y(a, r) != e;
  }
  if (t.indexOf("_eq_any") !== -1) {
    const r = t.replace(/(_eq_any)$/, ""), a = Array.isArray(e) ? e : [e];
    return (n) => a.some((s) => y(n, r) == s);
  }
  if (t.indexOf("_eq") !== -1) {
    const r = t.replace(/(_eq)$/, "");
    return (a) => y(a, r) == e;
  }
  if (t.indexOf("_inc_any") !== -1) {
    const r = t.replace(/(_inc_any)$/, ""), a = Array.isArray(e) ? e : [e];
    return (n) => a.some((s) => {
      const i = y(n, r);
      return Array.isArray(i) || typeof i == "string" ? i.includes(s) : !1;
    });
  }
  if (t.indexOf("_inc") !== -1) {
    const r = t.replace(/(_inc)$/, ""), a = Array.isArray(e) ? e : [e];
    return (n) => a.every((s) => {
      const i = y(n, r);
      return Array.isArray(i) || typeof i == "string" ? i.includes(s) : !1;
    });
  }
  if (t.indexOf("_ninc_any") !== -1) {
    const r = t.replace(/(_ninc_any)$/, ""), a = Array.isArray(e) ? e : [e];
    return (n) => a.every((s) => {
      const i = y(n, r);
      return Array.isArray(i) || typeof i == "string" ? !i.includes(s) : !1;
    });
  }
  return Array.isArray(e) ? (r) => Array.isArray(y(r, t)) ? Gd(e, (a) => {
    const n = y(r, t);
    return Array.isArray(n) ? Kd(n, (s) => s == a) : !1;
  }) : e.filter((a) => a == y(r, t)).length > 0 : typeof e == "object" ? (r) => Ld(e)(y(r, t)) : (r) => {
    const a = y(r, t);
    return Array.isArray(a) && typeof e == "string" ? a.indexOf(e) !== -1 : typeof a == "boolean" && typeof e == "string" ? a === (e === "true") : a == e;
  };
};
function Bt(t, e) {
  if (typeof e == "function")
    return t.filter(e);
  if (e instanceof Object) {
    const r = Object.keys(e).map((a) => {
      if (a === "q" && typeof e.q == "string") {
        const i = Vd(e.q), o = (c) => {
          for (const l in c) {
            const u = c[l];
            if (typeof u == "object" && o(u) || u && typeof u == "string" && u.match && u.match(i) !== null)
              return !0;
          }
          return !1;
        };
        return o;
      }
      const n = a.split("."), s = e[a];
      return n.length > 1 ? (i) => {
        const o = Hd(
          n,
          i
        );
        if (o) {
          const [c, l] = o, u = y(i, c);
          return Array.isArray(u) ? Bt(u, {
            [l]: s
          }).length > 0 : !1;
        }
        return lt(a, s)(i);
      } : lt(a, s);
    });
    return t.filter(
      (a) => r.reduce(
        (n, s) => n && s(a),
        !0
      )
    );
  }
  throw new Error("Unsupported filter type");
}
function qd(t, e) {
  if (typeof e == "function")
    return t.sort(e);
  if (typeof e == "string")
    return t.sort((r, a) => r[e] > a[e] ? 1 : r[e] < a[e] ? -1 : 0);
  if (Array.isArray(e)) {
    const r = e[0], a = e[1].toLowerCase() === "asc" ? 1 : -1;
    return t.sort((n, s) => n[r] > s[r] ? a : n[r] < s[r] ? -1 * a : 0);
  }
  throw new Error("Unsupported sort type");
}
function zd(t, e) {
  if (Array.isArray(e))
    return t.slice(
      e[0],
      e[1] !== void 0 ? e[1] + 1 : void 0
    );
  throw new Error("Unsupported range type");
}
function Vd(t) {
  const n = t.trim().replace(/[.*+?^${}()|[\]\\]/g, "\\$&").split(" ").map((i) => `(${i})`).join("|");
  return new RegExp(n, "i");
}
class Jd {
  constructor(e) {
    p(this, "obj", null);
    p(this, "database", null);
    p(this, "name", null);
    if (!(e instanceof Object))
      throw new Error(
        "Can't initialize a Single with anything except an object"
      );
    this.obj = Ft(e);
  }
  /**
   * A Single may need to access other collections (e.g. for embedded
   * references) This is done through a reference to the parent database.
   */
  setDatabase(e) {
    this.database = e;
  }
  setName(e) {
    this.name = e;
  }
  // No need to embed Singles, since they are by their nature top-level
  // No need to worry about remote references, (i.e. mysingleton_id=1) since
  // it is by definition a singleton
  _oneToManyEmbedder(e) {
    return (r) => {
      if (this.database == null)
        throw new Error("Can't embed references without a database");
      const a = this.database.collections[e];
      if (!a)
        throw new Error(
          `Can't embed a non-existing collection ${e}`
        );
      return r[e] = a.getAll({
        filter: (n) => r[e].indexOf(
          n[a.identifierName]
        ) !== -1
      }), r;
    };
  }
  _manyToOneEmbedder(e) {
    const r = `${e}s`, a = `${e}_id`;
    return (n) => {
      if (this.database == null)
        throw new Error("Can't embed references without a database");
      const s = this.database.collections[r];
      if (!s)
        throw new Error(
          `Can't embed a non-existing collection ${e}`
        );
      try {
        n[e] = s.getOne(
          n[a]
        );
      } catch {
      }
      return n;
    };
  }
  _itemEmbedder(e) {
    const a = (Array.isArray(e) ? e : [e]).map(
      (n) => n.endsWith("s") ? this._oneToManyEmbedder(n) : this._manyToOneEmbedder(n)
    );
    return (n) => a.reduce(
      (s, i) => i(s),
      n
    );
  }
  getOnly(e) {
    let r = this.obj;
    return e != null && e.embed && this.database && (r = Object.assign({}, r), r = this._itemEmbedder(e.embed)(r)), r;
  }
  updateOnly(e) {
    if (this.obj == null)
      throw new Error("Can't update a non-existing object");
    for (const r in e)
      this.obj[r] = e[r];
    return this.obj;
  }
}
class Qd {
  constructor({
    data: e,
    identifierName: r = "id",
    getNewId: a
  } = {}) {
    p(this, "identifierName", "id");
    p(this, "collections", {});
    p(this, "singles", {});
    p(this, "getNewId");
    this.getNewId = a, this.identifierName = r, e && this.init(e);
  }
  /**
   * Shortcut for adding several collections if identifierName is always the same
   */
  init(e) {
    for (const r in e) {
      const a = e[r];
      Array.isArray(a) ? this.addCollection(
        r,
        new ct({
          items: a,
          identifierName: this.identifierName,
          getNewId: this.getNewId
        })
      ) : this.addSingle(r, new Jd(a));
    }
  }
  addCollection(e, r) {
    this.collections[e] = r, r.setDatabase(this), r.setName(e);
  }
  getCollection(e) {
    return this.collections[e];
  }
  getCollectionNames() {
    return Object.keys(this.collections);
  }
  addSingle(e, r) {
    this.singles[e] = r, r.setDatabase(this), r.setName(e);
  }
  getSingle(e) {
    return this.singles[e];
  }
  getSingleNames() {
    return Object.keys(this.singles);
  }
  /**
   * @param {string} name
   * @param {string} params As decoded from the query string, e.g. { sort: "name", filter: {enabled:true}, slice: [10, 20] }
   */
  getCount(e, r) {
    return this.collections[e].getCount(r);
  }
  /**
   * @param {string} name
   * @param {string} params As decoded from the query string, e.g. { sort: "name", filter: {enabled:true}, slice: [10, 20] }
   */
  getAll(e, r) {
    return this.collections[e].getAll(r);
  }
  getOne(e, r, a) {
    return this.collections[e].getOne(r, a);
  }
  addOne(e, r) {
    return Object.prototype.hasOwnProperty.call(this.collections, e) || this.addCollection(
      e,
      new ct({
        items: [],
        identifierName: this.identifierName,
        getNewId: this.getNewId
      })
    ), this.collections[e].addOne(r);
  }
  updateOne(e, r, a) {
    return this.collections[e].updateOne(r, a);
  }
  removeOne(e, r) {
    return this.collections[e].removeOne(r);
  }
  getOnly(e, r) {
    return this.singles[e].getOnly();
  }
  updateOnly(e, r) {
    return this.singles[e].updateOnly(r);
  }
}
class me {
  constructor({
    baseUrl: e = "",
    defaultQuery: r = () => ({}),
    database: a,
    middlewares: n,
    ...s
  } = {}) {
    p(this, "baseUrl", "");
    p(this, "defaultQuery", () => ({}));
    p(this, "middlewares");
    p(this, "database");
    this.baseUrl = e, this.defaultQuery = r, this.middlewares = n || [], a ? this.database = a : this.database = new Qd(s);
  }
  /**
   * @param Function ResourceName => object
   */
  setDefaultQuery(e) {
    this.defaultQuery = e;
  }
  getContext(e) {
    var a, n;
    for (const s of this.database.getSingleNames())
      if ((a = e.url) != null && a.match(
        new RegExp(`^${this.baseUrl}\\/(${s})(\\/?.*)?$`)
      ))
        return {
          ...e,
          single: s
        };
    const r = (n = e.url) == null ? void 0 : n.match(
      new RegExp(
        `^${this.baseUrl}\\/([^\\/?]+)(\\/(\\w+|\\d+))?(\\?.*)?$`
      )
    );
    if (r) {
      const s = r[1], i = Object.assign(
        {},
        this.defaultQuery(s),
        e.params
      );
      return {
        ...e,
        collection: s,
        params: i
      };
    }
    return e;
  }
  async handle(e) {
    const r = this.getContext(e);
    let a = 0;
    const n = [...this.middlewares], s = (i) => {
      const o = n[a++];
      return o ? o(i, s) : this.handleRequest(i);
    };
    try {
      return await s(r);
    } catch (i) {
      if (i instanceof Error)
        throw i;
      return i;
    }
  }
  handleRequest(e) {
    var s, i;
    for (const o of this.database.getSingleNames())
      if ((s = e.url) != null && s.match(
        new RegExp(`^${this.baseUrl}\\/(${o})(\\/?.*)?$`)
      )) {
        if (e.method === "GET")
          try {
            return {
              status: 200,
              body: this.database.getOnly(o),
              headers: {
                "Content-Type": "application/json"
              }
            };
          } catch {
            return {
              status: 404,
              headers: {}
            };
          }
        if (e.method === "PUT")
          try {
            return e.requestBody == null ? {
              status: 400,
              headers: {}
            } : {
              status: 200,
              body: this.database.updateOnly(
                o,
                e.requestBody
              ),
              headers: {
                "Content-Type": "application/json"
              }
            };
          } catch {
            return {
              status: 404,
              headers: {}
            };
          }
        if (e.method === "PATCH")
          try {
            return e.requestBody == null ? {
              status: 400,
              headers: {}
            } : {
              status: 200,
              body: this.database.updateOnly(
                o,
                e.requestBody
              ),
              headers: {
                "Content-Type": "application/json"
              }
            };
          } catch {
            return {
              status: 404,
              headers: {}
            };
          }
      }
    const r = (i = e.url) == null ? void 0 : i.match(
      new RegExp(
        `^${this.baseUrl}\\/([^\\/?]+)(\\/(\\w+|\\d+))?(\\?.*)?$`
      )
    );
    if (!r)
      return { status: 404, headers: {} };
    const a = r[1], n = Object.assign(
      {},
      this.defaultQuery(a),
      e.params
    );
    if (r[2]) {
      if (!this.database.getCollection(a))
        return { status: 404, headers: {} };
      const o = r[3];
      if (e.method === "GET")
        try {
          return {
            status: 200,
            body: this.database.getOne(a, o, n),
            headers: {
              "Content-Type": "application/json"
            }
          };
        } catch {
          return {
            status: 404,
            headers: {}
          };
        }
      if (e.method === "PUT")
        try {
          return e.requestBody == null ? {
            status: 400,
            headers: {}
          } : {
            status: 200,
            body: this.database.updateOne(
              a,
              o,
              e.requestBody
            ),
            headers: {
              "Content-Type": "application/json"
            }
          };
        } catch {
          return {
            status: 404,
            headers: {}
          };
        }
      if (e.method === "PATCH")
        try {
          return e.requestBody == null ? {
            status: 400,
            headers: {}
          } : {
            status: 200,
            body: this.database.updateOne(
              a,
              o,
              e.requestBody
            ),
            headers: {
              "Content-Type": "application/json"
            }
          };
        } catch {
          return {
            status: 404,
            headers: {}
          };
        }
      if (e.method === "DELETE")
        try {
          return {
            status: 200,
            body: this.database.removeOne(a, o),
            headers: {
              "Content-Type": "application/json"
            }
          };
        } catch {
          return {
            status: 404,
            headers: {}
          };
        }
    } else {
      if (e.method === "GET") {
        if (!this.database.getCollection(a))
          return { status: 404, headers: {} };
        const o = this.database.getCount(
          a,
          n.filter ? { filter: n.filter } : {}
        );
        if (o > 0) {
          const c = this.database.getAll(a, n), l = n.range ? n.range[0] : 0, u = n.range && n.range.length === 2 ? Math.min(
            c.length - 1 + l,
            n.range[1]
          ) : c.length - 1;
          return {
            status: c.length === o ? 200 : 206,
            body: c,
            headers: {
              "Content-Type": "application/json",
              "Content-Range": `items ${l}-${u}/${o}`
            }
          };
        }
        return {
          status: 200,
          body: [],
          headers: {
            "Content-Type": "application/json",
            "Content-Range": "items */0"
          }
        };
      }
      if (e.method === "POST") {
        if (e.requestBody == null)
          return {
            status: 400,
            headers: {}
          };
        const o = this.database.addOne(
          a,
          e.requestBody
        ), c = `${this.baseUrl}/${a}/${o[this.database.getCollection(a).identifierName]}`;
        return {
          status: 201,
          body: o,
          headers: {
            "Content-Type": "application/json",
            Location: c
          }
        };
      }
    }
    return {
      status: 404,
      headers: {}
    };
  }
  addMiddleware(e) {
    this.middlewares.push(e);
  }
  addCollection(e, r) {
    this.database.addCollection(e, r);
  }
  getCollection(e) {
    return this.database.getCollection(e);
  }
  getCollectionNames() {
    return this.database.getCollectionNames();
  }
  addSingle(e, r) {
    this.database.addSingle(e, r);
  }
  getSingle(e) {
    return this.database.getSingle(e);
  }
  getSingleNames() {
    return this.database.getSingleNames();
  }
}
function Ut(t) {
  if (!t)
    return {};
  const e = {};
  return t.split("&").map((a) => {
    if (a.indexOf("=") === -1)
      e[a] = !0;
    else {
      let [n, s] = a.split("=");
      (s.indexOf("[") === 0 || s.indexOf("{") === 0) && (s = JSON.parse(s)), e[n.trim()] = s;
    }
  }), e;
}
class Gt {
  constructor({
    loggingEnabled: e = !1,
    server: r,
    ...a
  } = {}) {
    p(this, "loggingEnabled", !1);
    p(this, "server");
    this.server = r || new me(a), this.loggingEnabled = e;
  }
  getHandler() {
    return async (e) => {
      e.readyState = 4;
      const r = this.getNormalizedRequest(e), a = await this.server.handle(r);
      this.respond(a, e);
    };
  }
  getNormalizedRequest(e) {
    const r = typeof e == "string" ? new Request(e) : e, a = r.url ? decodeURIComponent(r.url.slice(r.url.indexOf("?") + 1)) : "", n = Ut(a);
    let s;
    if (r.requestBody)
      try {
        s = JSON.parse(
          r.requestBody
        );
      } catch {
      }
    return {
      url: r.url,
      headers: new Headers(e.requestHeaders),
      params: n,
      requestBody: s,
      method: r.method
    };
  }
  respond(e, r) {
    const a = {
      status: e.status,
      body: e.body ?? "",
      headers: e.headers ?? {}
    };
    Array.isArray(a.headers) ? a.headers.find((n) => n.name.toLowerCase() === "content-type") || a.headers.push({
      name: "Content-Type",
      value: "application/json"
    }) : a.headers["Content-Type"] || (a.headers["Content-Type"] = "application/json"), r.readyState = 1, r.respond(
      a.status,
      a.headers,
      JSON.stringify(a.body)
    ), this.log(r, a);
  }
  log(e, r) {
    this.loggingEnabled && (console.group ? (console.groupCollapsed(e.method, e.url, "(FakeRest)"), console.group("request"), console.log(e.method, e.url), console.log("headers", e.requestHeaders), console.log("body   ", e.requestBody), console.groupEnd(), console.group("response", r.status), console.log("headers", r.headers), console.log("body   ", r.body), console.groupEnd(), console.groupEnd()) : (console.log(
      "FakeRest request ",
      e.method,
      e.url,
      "headers",
      e.requestHeaders,
      "body",
      e.requestBody
    ), console.log(
      "FakeRest response",
      r.status,
      "headers",
      r.headers,
      "body",
      r.body
    )));
  }
  toggleLogging() {
    this.loggingEnabled = !this.loggingEnabled;
  }
}
const Xd = (t) => new Gt(t).getHandler(), Zd = Gt;
class Kt {
  constructor({
    loggingEnabled: e = !1,
    server: r,
    ...a
  } = {}) {
    p(this, "loggingEnabled", !1);
    p(this, "server");
    this.server = r || new me(a), this.loggingEnabled = e;
  }
  getHandler() {
    return async (r, a) => {
      const n = new Request(r, a), s = await this.getNormalizedRequest(n), i = await this.server.handle(s);
      return this.log(n, i, s), i;
    };
  }
  async getNormalizedRequest(e) {
    const r = typeof e == "string" ? new Request(e) : e, a = r.url ? decodeURIComponent(r.url.slice(r.url.indexOf("?") + 1)) : "", n = Ut(a), s = await r.text();
    let i;
    try {
      i = JSON.parse(s);
    } catch {
    }
    return {
      url: r.url,
      headers: r.headers,
      params: n,
      requestBody: i,
      method: r.method
    };
  }
  log(e, r, a) {
    this.loggingEnabled && (console.group ? (console.groupCollapsed(
      a.method,
      a.url,
      "(FakeRest)"
    ), console.group("request"), console.log(a.method, a.url), console.log("headers", e.headers), console.log("body   ", e.requestJson), console.groupEnd(), console.group("response", r.status), console.log("headers", r.headers), console.log("body   ", r.body), console.groupEnd(), console.groupEnd()) : (console.log(
      "FakeRest request ",
      a.method,
      a.url,
      "headers",
      e.headers,
      "body",
      e.requestJson
    ), console.log(
      "FakeRest response",
      r.status,
      "headers",
      r.headers,
      "body",
      r.body
    )));
  }
  toggleLogging() {
    this.loggingEnabled = !this.loggingEnabled;
  }
}
const kd = (t) => new Kt(t).getHandler(), eh = Kt;
class Wd {
  constructor({ server: e, ...r }) {
    p(this, "server");
    this.server = e || new me(r);
  }
  getHandler() {
    return async ({ request: e }) => {
      const r = await this.getNormalizedRequest(e), a = await this.server.handle(r);
      return new Response(JSON.stringify(a.body), {
        status: a.status,
        headers: a.headers
      });
    };
  }
  async getNormalizedRequest(e) {
    const r = new URL(e.url), a = Object.fromEntries(
      Array.from(new URLSearchParams(r.search).entries()).map(
        ([s, i]) => [s, JSON.parse(i)]
      )
    );
    let n;
    try {
      const s = await e.text();
      n = JSON.parse(s);
    } catch {
    }
    return {
      url: e.url,
      headers: e.headers,
      params: a,
      requestBody: n,
      method: e.method
    };
  }
}
const th = (t) => new Wd(t).getHandler(), rh = (t) => (e, r) => new Promise((a) => {
  setTimeout(() => {
    a(r(e));
  }, t);
});
export {
  ct as Collection,
  Qd as Database,
  Kt as FetchMockAdapter,
  eh as FetchServer,
  Wd as MswAdapter,
  Zd as Server,
  me as SimpleRestServer,
  Jd as Single,
  Gt as SinonAdapter,
  kd as getFetchMockHandler,
  th as getMswHandler,
  Xd as getSinonHandler,
  rh as withDelay
};
//# sourceMappingURL=fakerest.min.js.map

import { CollectionItem, Embed, Query } from './types.ts';
import { Database } from './Database.ts';

export declare class Single<T extends CollectionItem = CollectionItem> {
    obj: T | null;
    database: Database | null;
    name: string | null;
    constructor(obj: T);
    /**
     * A Single may need to access other collections (e.g. for embedded
     * references) This is done through a reference to the parent database.
     */
    setDatabase(database: Database): void;
    setName(name: string): void;
    _oneToManyEmbedder(resourceName: string): (item: T) => T;
    _manyToOneEmbedder(resourceName: string): (item: T) => T;
    _itemEmbedder(embed: Embed): (item: T) => T;
    getOnly(query?: Query): T | null;
    updateOnly(item: T): T;
}
